/**
 * Sample React Native App
 *
 * adapted from App.js generated by the following command:
 *
 * react-native init example
 *
 * https://github.com/facebook/react-native
 */

import React, {useState, useEffect} from 'react';
import {NavigationContainer} from '@react-navigation/native';
import {createNativeStackNavigator} from '@react-navigation/native-stack';
import {ImSdk, ImSdkEventType} from '@byron-react-native/tencent-im';
import {V2TIMLogLevel} from '@byron-react-native/tencent-im';
import GroupChat from './src/pages/GroupChat';
import PrivateChat from './src/pages/PrivateChat';
import {EmitterSubscription, View, ActivityIndicator} from 'react-native';
import {login_im_sdk, to} from './src/utils';
import HomeScreen from './src/pages/HomeScreen';
import {StatusBar, Platform, PermissionsAndroid} from 'react-native';

const Stack = createNativeStackNavigator();

const subscriptions = [
  ImSdkEventType.Connecting,
  ImSdkEventType.ConnectFailed,
  ImSdkEventType.ConnectSuccess,
  ImSdkEventType.KickedOffline,
  ImSdkEventType.UserSigExpired,
  ImSdkEventType.SelfInfoUpdated,
];

async function hasPhotoPermission() {
  if (Platform.OS === 'ios') {
    return;
  }
  const permission = PermissionsAndroid.PERMISSIONS.WRITE_EXTERNAL_STORAGE;
  const hasPermission = await PermissionsAndroid.check(permission);
  if (!hasPermission) {
    await PermissionsAndroid.request(permission);
  }
}

function App() {
  const [groupID, setGroupID] = useState('');

  useEffect(() => {
    hasPhotoPermission();
    const initImSDK = async () => {
      const res = await login_im_sdk();
      if (res && res.id && res.sig) {
        const [err] = await to(ImSdk.login(`${res.id}`, res.sig));
        // await ImSdk.setSelfInfo(
        //   '18816468657',
        //   'https://avatars.githubusercontent.com/u/10445610?s=64&v=4',
        // );
        // ImSdk.sendC2CTextMessage('Hello', '23714805');
        if (err) {
          console.log(' >> ImSdk.login err', err);
          return;
        }
        setGroupID(res.group_id);
      }
    };

    ImSdk.initSDK(1400665794, V2TIMLogLevel.V2TIM_LOG_NONE).then(() => {
      initImSDK();
    });

    const emitters: Record<string, EmitterSubscription> = {};

    for (let sub of subscriptions) {
      emitters[sub] = ImSdk.addListener(sub, async () => {
        console.log(' >> EmitterSubscription ', sub);
        if (sub === ImSdkEventType.UserSigExpired) {
          initImSDK();
        }
      });
    }

    return () => {
      for (let sub of subscriptions) {
        emitters[sub].remove();
      }
    };
  }, []);

  return (
    <NavigationContainer>
      <StatusBar barStyle={'light-content'} />
      {groupID ? (
        <Stack.Navigator screenOptions={{headerShown: false}}>
          <Stack.Screen
            name="Home"
            component={HomeScreen}
            initialParams={{groupID}}
          />
          <Stack.Screen
            name="Group"
            component={GroupChat}
            initialParams={{groupID}}
          />
          <Stack.Screen
            name="Private"
            component={PrivateChat}
            initialParams={{groupID}}
          />
        </Stack.Navigator>
      ) : (
        <View style={{flex: 1, alignItems: 'center', justifyContent: 'center'}}>
          <ActivityIndicator size={'large'} color={'#000'} />
        </View>
      )}
    </NavigationContainer>
  );
}

export default App;
